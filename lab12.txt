1)Write a Python program to sum all the items in a list. 
def sum_of_list(lst):    #define a  function
    sum = 0              # initialize variable sum
    for num in lst:      #iterateover each element in the list using a for loop
        sum += num       # add each element to the variable
    return sum           # return  the sum
my_list = [1,2,3,4,5,6]
result = sum_of_list(my_list)
print("The sum of the list is:", result)   #print the result

OUTPUT:
The sum of the list is: 21


--------------------------------------------------------------------------------------------------------------------------------------------------------------
2)
 Write a Python program to get the largest and smallest number from a list without builtin functions.
 def find_largest_smallest(numbers):   #define function
    largest=numbers[0]                 #initialize the largest  
    smallest=numbers[0]                # initialize the smallest 
    for num in numbers:                # iterate over the remaining numbers in the list
        if num > largest:              # check the condition the number with the largest number
            largest=num
        if num < smallest:
             smallest=num
    return largest,smallest           #return the largest number and smallest number
my_list=[8,11,4,7,5]
largest_num,smallest_num= find_largest_smallest(my_list)
print("largest number:",largest_num)
print("smallest number:",smallest_num)

OUTPUT:
largest number: 11
smallest number: 4

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3) Write a Python program to find duplicate values from a list and display those. 

def find_duplicates(numbers):    #define a function
    duplicates = []              #create a empty list
    seen=set()                  
    for num in numbers:          # iterate each elements in the lis
        if num in seen:
            duplicates.append(num)  
        else:
            seen.add(num)
    return duplicates            #return the list of duplicate values
my_list=[1,2,5,5,2,6,1,3]
duplicate_values=find_duplicates(my_list)
print("duplicate values:",duplicate_values)


OUTPUT:
duplicate values: [5, 2, 1]

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4)Write a Python program to split a given list into two parts where the length of the first part of the list is given. 
Original list: [1, 1, 2, 3, 4, 4, 5, 1] 
Length of the first part of the list: 3 
Splitted the said list into two parts: 
([1, 1, 2], [3, 4, 4, 5, 1])

def split_list(original_list,length_first_part):      #define a function to split into two parts 
    first_part=original_list[:length_first_part]      #get the first part of the list using list slicing
    second_part=original_list[length_first_part:]     #get the second part of the list using list slicing
    return first_part,second_part                     #define two parts as a tuple
original_list=[1,1,2,3,4,4,5,1]
length_first_part=3
split_parts=split_list(original_list,length_first_part)
print("splitted list:",split_parts)

OUTPUT:
splitted list: ([1, 1, 2], [3, 4, 4, 5, 1])

----------------------------------------------------------------------------------------------------------------------------------------------------
5)Write a Python program to traverse a given list in reverse order, and print the elements with the original index. Original list: ['red', 'green', 'white', 'black'] Traverse the said list in reverse order:
black 
white 
green 
red

def traverse_reverse(list):                     #define a function to traverse the list in reverse
  for i in range(len(list)-1,-1,-1):            #iterate over the indices  of the list in reverse order
    print(list[i])                              # print the elements in correct index with the original index
original_list=['red','green','white','black']
traverse_reverse(original_list)

OUTPUT:
black
white
green
red
